((r,api,echo)=>{
  api._import=function(pkg){
      try {
        r(pkg);
      } catch (e) {
         echo(`Install ${pkg} Package : npm install ${pkg}`);
      } finally {

      }
  };
  api.getGlobal=function(){
    try {
      return window;
    } catch (e) {
      return global;
    }
  }
  api.jsdk={};
  api.jsdk.overload=function(namespaceObject,fnName){
      if(arguments.length===1){
        fnName=namespaceObject;
        namespaceObject=api.getGlobal();
      }
      namespaceObject[fnName]=function(){
        let name=`${fnName}_${arguments.length}_${Array.from(arguments).map((arg)=>typeof arg).join('_')}`;
        try {
          return namespaceObject[`${fnName}_${arguments.length}_${Array.from(arguments).map((arg)=>typeof arg).join('_')}`](...arguments);
        } catch (e) {
            console.error(`"${name}" does not exist, check `,namespaceObject);
        }
      }
      return namespaceObject[fnName];
  };
  api.jsdk.overload(api.jsdk,'extends');
  api.jsdk.extends_2_string_string=function(){

  };
  api.jsdk.extends_2_object_object=function(a,b){
      return Object.assign(b,a);
  };
 echo('Loading XClass Library : JS development kit ....');

     api._import('x-string');
     api._import('x-array');
     api._import('x-number');
     api._import('x-boolean');
     api._import('x-date');
     api._import('x-object');
     api._import('x-storage');
     api._import('x-function');
     api._import('x-m');
     api._import('x-global');
     api._import('x-operators');
     api._import('x-regexp');
     api._import('x-statements');
     api._import('x-masfufa');


     echo('Loading XClass Library :Done!');
    echo("abdennour want to capitalize all words".capitalize(true));
     echo(Array.range(10));
     echo(new Date().format('dd-mm-yyyy hh:MM:ss'))
     echo(new Date().format('dddd mmm dd yyyy HH:MM:ss'));
    module.exports=api.jsdk;
})(require,{},function(){
  if(process.env.NODE_ENV && process.env.NODE_ENV.toLowerCase().startsWith('dev')){
    console.log(...arguments);
  }
});
